@startuml

title __MODELO's Class Diagram__\n

  namespace modelo {
    class modelo.Animal {
        - ataque1 : String
        - ataque2 : String
        - ataque3 : String
        - id : String
        - imagen : String
        - nombre : String
        - nombreAtaque1 : String
        - nombreAtaque2 : String
        - nombreAtaque3 : String
        - vida : String
        + Animal()
        + ataqueRandom()
        {static} + buscarAnimalPorNombre()
        {static} + crearAnimalInicial()
        + getAtaque1()
        + getAtaque2()
        + getAtaque3()
        + getId()
        + getImagen()
        + getNombre()
        + getNombreAtaque1()
        + getNombreAtaque2()
        + getNombreAtaque3()
        + getVida()
        + setImagen()
        + setVida()
    }
  }
  

  namespace modelo {
    class modelo.AnimalNoEncontradoException {
    }
  }
  

  namespace modelo {
    class modelo.ConjuntoJugadores {
        - jugadores : ArrayList<Jugador>
        + ConjuntoJugadores()
        + actualizarDatosJugador()
        + buscarJugadorPorRut()
        + buscarPosicionJugador()
        + getJugadores()
        + jugadorExiste()
    }
  }
  

  namespace modelo {
    class modelo.Cuestionario {
        - preguntas : ArrayList<Pregunta>
        + Cuestionario()
        + getPreguntas()
        + obtenerPregunta()
    }
  }
  

  namespace modelo {
    class modelo.Juego {
        {static} + atacar()
        {static} + comprobarSiAnimalSigueVivo()
        {static} + convertirStringAInt()
        {static} + recibirAtaque()
        {static} + usarParcheCurita()
    }
  }
  

  namespace modelo {
    class modelo.Jugador {
        - animales : ArrayList<Animal>
        - contrasenia : String
        - nombre : String
        - parcheCuritas : String
        - rut : String
        + Jugador()
        + agregarAnimal()
        + agregarUnParcheCuritas()
        + getAnimales()
        + getContrasenia()
        + getNombre()
        + getParcheCuritas()
        + getRut()
        + setParcheCuritas()
        + toString()
        - animalEsAmigo()
        - obtenerIdsAnimales()
    }
  }
  

  namespace modelo {
    class modelo.JugadorNoEncontradoException {
        + JugadorNoEncontradoException()
    }
  }
  

  namespace modelo {
    class modelo.PortalDeInicio {
        {static} + crearCuentaParaVentana()
        {static} + validarContrasenaCorrecta()
    }
  }
  

  namespace modelo {
    class modelo.Pregunta {
        - alternativaA : String
        - alternativaB : String
        - alternativaC : String
        - alternativaCorrecta : String
        - enunciado : String
        + Pregunta()
        + getAlternativaA()
        + getAlternativaB()
        + getAlternativaC()
        + getAlternativaCorrecta()
        + getEnunciado()
    }
  }
  



right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
